name: Movies App - CI/CD Workflow - Push

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze-code:
    name: Analyze Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check Lint
        run: pnpm run lint:check

      - name: Check Typing
        run: pnpm run type-check

      - name: Message Success
        run: echo "Code was analyzed successfuly for branch '${{ github.ref_name }}'"

  test-code:
    name: Test Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Run unit tests
        run: pnpm run test:unit:ci

      - name: Install playwright browsers
        run: pnpm run test:e2e:install

      - name: Run end-to-end tests
        run: pnpm run test:e2e:ci

      - name: Message Success
        run: echo "Code was tested successfuly for branch '${{ github.ref_name }}'"

  create-tag:
    name: Create Git Tag
    needs: [analyze-code, test-code]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'github-actions@github.com'

      - name: Create tag
        id: create_tag
        run: |
          # Extract version from package.json or CHANGELOG.md
          VERSION=$(grep -Eo '"version":\s*"[0-9.]+"' package.json | grep -Eo '[0-9.]+')
          git tag "v$VERSION"

      - name: Push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin "v$(grep -Eo '"version":\s*"[0-9.]+"' package.json | grep -Eo '[0-9.]+')"

  generate-changelog:
    name: Generate CHANGELOG.md
    needs: create-tag
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install conventional-changelog-cli
        run: pnpm install -g conventional-changelog-cli

      - name: Generate changelog
        run: conventional-changelog -p angular -i CHANGELOG.md -s -r 0

      - name: Commit changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'github-actions@github.com'
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG.md for version $(grep -Eo '"version":\s*"[0-9.]+"' package.json | grep -Eo '[0-9.]+')"
          git push origin main
